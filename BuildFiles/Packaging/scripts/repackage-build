#!/bin/bash

#Update schemata
cd /home/prod/Smallwebs/Activizr-repo/schemas
echo "Checking for updates to schema..."
svn update

cd /home/packager/swarmops

#Update all files, including this one. Runpos will remain same in possible new version
echo "Checking for updates to packaging process..."
svn update

# Check parameters

if [ "$1" == "release" ]; then
  DROPFOLDER=release
  echo "Packaging FINISHED RELEASE for super-stable deployments."
elif [ "$1" == "sprint" ]; then
  DROPFOLDER=sprint
  echo "Packaging END-OF-SPRINT for normal deployments."
elif [ "$1" == "" ]; then
  DROPFOLDER=internal
  echo "internal" > ../lastbuild/swarmops/internal/frontend/SprintName.txt
  echo "Packaging internal test build."
else
  echo "Syntax: repackage-build [sprint|release]"
  echo "(No parameter will trigger a build of the internal branch.)"
  exit 1;
fi

BUILDID=$(cat ../lastbuild/swarmops/$DROPFOLDER/BuildIdentity.txt | tr -d ' \r')
COMMITID=$(cat ../lastbuild/swarmops/$DROPFOLDER/CommitIdentity.txt | tr -d ' \r')

BUILDID=$(echo $BUILDID)-$(echo $COMMITID | cut -c 1-7)

echo ""
echo "Packaging Swarmops, branch '$DROPFOLDER', build $BUILDID."
echo "----------------------------------------------------------------------"
echo ""

scripts/repackage-one frontend $1
scripts/repackage-one backend $1
scripts/repackage-one common $1

if [ "$DROPFOLDER" != "internal" ]; then
  cp -R /home/prod/Smallwebs/HostedScripts/staging/* /home/prod/Smallwebs/HostedScripts/.
  scripts/repackage-one extscripts sprint
fi

echo "Notifying developers that new build has packaged for test/deployment..."

if [ "$DROPFOLDER" == "internal" ]; then
  PACKAGELABEL="internal"
  echo "$(cat ../lastbuild/swarmops/internal/CommitMessage.txt)" > deploymsg.txt
  echo "" >> deploymsg.txt
  echo "The packages (swarmops-frontend-internal, swarmops-backend-internal) are available from repositories now, and can be tested at http://dev.swarmops.com/ as usual. Last 3 commits listed above." >> deploymsg.txt
else
  PACKAGELABEL="$DROPFOLDER $(cat ../lastbuild/swarmops/$DROPFOLDER/frontend/SprintName.txt | tr -d '\n\r')"
  echo "NOTE: this is a $DROPFOLDER package bundle. It will deploy automatically to live systems via apt-get upgrade. Yay, we made another sprint!" > deploymsg.txt
fi

# TODO: Add build messages to deploy message, at least for internal build

mail -a "From: Swarmops Builder <builds@swarmops.com>" -s "Swarmops $BUILDID ($PACKAGELABEL) packaged." "swarmops.developers@groups.facebook.com" < deploymsg.txt

rm deploymsg.txt

