<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AttestCosts.AdvanceAttested" xml:space="preserve">
    <value>Kontantförskott #{0:N0} till {1} har attesterats till beloppet {3:N2}.</value>
    <comment>Status message.</comment>
  </data>
  <data name="AttestCosts.AdvanceDeattested" xml:space="preserve">
    <value>Kontantförskott #{0:N0} till {1} har AV-attesterats. Det kommer inte att betalas ut om det inte attesteras igen.</value>
    <comment>When somebody undoes a previous attestation.</comment>
  </data>
  <data name="AttestCosts.ExpenseAttested" xml:space="preserve">
    <value>Utläggsanspråk #{0:N0} från {1} för {2} {3:N2} har attesterats.</value>
    <comment>{2} is the currency.</comment>
  </data>
  <data name="AttestCosts.ExpenseDeattested" xml:space="preserve">
    <value>Utläggsanspråk #{0:N0} från {1} har AV-attesterats. Det kommer inte att betalas ut förrän det attesterats igen.</value>
    <comment>When somebody undoes a previous attestation.</comment>
  </data>
  <data name="AttestCosts.GridHeader.Action" xml:space="preserve">
    <value>Attest</value>
    <comment>Yes / No buttons. Keep short!</comment>
  </data>
  <data name="AttestCosts.GridHeader.Beneficiary" xml:space="preserve">
    <value>Mottagare</value>
    <comment>The receiver of money.</comment>
  </data>
  
  <data name="AttestCosts.GridHeader.Description" xml:space="preserve">
    <value>Beskrivning</value>
  </data>
  <data name="AttestCosts.GridHeader.Docs" xml:space="preserve">
    <value>Dok</value>
    <comment>Button to see underlying documentation. Keep short!</comment>
  </data>
  <data name="AttestCosts.GridHeader.Item" xml:space="preserve">
    <value>Kostnad</value>
    <comment>Could also be translated to "Type". Will list"cash advance", "invoice", etc.</comment>
  </data>
  <data name="AttestCosts.GridHeader.Requested" xml:space="preserve">
    <value>Begärt</value>
    <comment>Header for the requested amount.</comment>
  </data>
  <data name="AttestCosts.Header.CostsAwaitingAttestation" xml:space="preserve">
    <value>Kostnader som väntar på attest</value>
  </data>
  <data name="AttestCosts.Info" xml:space="preserve">
    <value>Här attesterar du belopp som andra personer vill ha från dina budgetar. Inget betalas ut före det attesterats.</value>
  </data>
  <data name="AttestCosts.InvoiceAttested" xml:space="preserve">
    <value>Faktura #{0:N0} från {1} på {2} {3:N2} attesterades.</value>
    <comment>{2} is the currency.</comment>
  </data>
  <data name="AttestCosts.InvoiceDeattested" xml:space="preserve">
    <value>Faktura #{0:N0} från {1} har AV-attesterats. Den kommer inte att betalas förrän den attesterats igen.</value>
    <comment>When somebody undoes a previous attestation.</comment>
  </data>
  <data name="AttestCosts.PageTitle" xml:space="preserve">
    <value>Attestera kostnader</value>
  </data>
  <data name="AttestCosts.ParleyAttested" xml:space="preserve">
    <value>Konferens #{0:N0} som arrangeras av {1} har attesterats för {3:N2}.</value>
  </data>
  <data name="AttestCosts.ParleyDeattested" xml:space="preserve">
    <value>Konferens #{0:N0} av {1} har AV-attesterats. Den kommer inte att få garantimedel förrän den attesteras igen.</value>
    <comment>When somebody undoes a previous attestation.</comment>
  </data>
  <data name="AttestCosts.SalaryAttested" xml:space="preserve">
    <value>Löneutbetalning #{0:N0} till {1} attesterades till en totalkostnad av {3:N2}.</value>
  </data>
  <data name="AttestCosts.SalaryDeattested" xml:space="preserve">
    <value>Löneutbetalning #{0:N0} till {1} har AV-attesterats. Lönen kommer inte att betalas ut om den inte attesteras igen.</value>
    <comment>When somebody undoes a previous attestation.</comment>
  </data>
  <data name="CreateInboundInvoice.Amount" xml:space="preserve">
    <value>Fakturabelopp (i {0})</value>
    <comment>{0} is the organization's main currency.</comment>
  </data>
  <data name="CreateInboundInvoice.Description" xml:space="preserve">
    <value>Beskrivning</value>
    <comment>Free-text description of invoice</comment>
  </data>
  <data name="CreateInboundInvoice.HeaderInvoiceImage" xml:space="preserve">
    <value>Fakturabild</value>
  </data>
  <data name="CreateInboundInvoice.HeaderPaymentDetails" xml:space="preserve">
    <value>Betalningsdetaljer</value>
    <comment>Displayed as header over supplier's account details</comment>
  </data>
  <data name="CreateInboundInvoice.Info" xml:space="preserve">
    <value>Här lägger du in fakturor som din organisation tagit emot ("leverantörsreskontra"). Lägg in leverantörens namn, fakturans belopp, förfallodatum, referensnummer, och ladda upp en bild på fakturan. Välj också en budget. Budgetägaren behöver attestera, som vanligt.</value>
  </data>
  <data name="CreateInboundInvoice.PageTitle" xml:space="preserve">
    <value>Mottagit faktura</value>
  </data>
  <data name="CreateInboundInvoice.Reference" xml:space="preserve">
    <value>Fakturareferens</value>
  </data>
  <data name="CreateInboundInvoice.ReferenceAutomaticOcr" xml:space="preserve">
    <value>OCR / automatisk</value>
    <comment>Some invoices come with OCR numbers printed on them for automatic processing.</comment>
  </data>
  <data name="CreateInboundInvoice.ReferenceManual" xml:space="preserve">
    <value>Manuell</value>
    <comment>Other invoices come without automated processing and a manual </comment>
  </data>
  <data name="CreateInboundInvoice.SuccessMessage" xml:space="preserve">
    <value>Leverantörsfaktura #{0:N0} inlagd.</value>
    <comment>The {0:N0} is just an identity number (formatted for culture). This message is displayed on success.</comment>
  </data>
  <data name="CreateInboundInvoice.SupplierAccount" xml:space="preserve">
    <value>Konto</value>
    <comment>Free text input, intended to convey everything needed to get the money right</comment>
  </data>
  <data name="CreateInboundInvoice.UploadInvoiceImage" xml:space="preserve">
    <value>Ladda upp bild</value>
  </data>
  <data name="CreateInboundInvoice.ValidationError.Account" xml:space="preserve">
    <value>Ange leverantörens bankkonto eller motsvarande.</value>
  </data>
  <data name="FileExpenseClaim.Amount" xml:space="preserve">
    <value>Belopp för utläggsanspråk (i {0})</value>
    <comment>{0} is the currency.</comment>
  </data>
  <data name="FileExpenseClaim.BankAccount" xml:space="preserve">
    <value>Kontonummer</value>
  </data>
  <data name="FileExpenseClaim.BankClearing" xml:space="preserve">
    <value>Clearingnummer</value>
  </data>
  <data name="FileExpenseClaim.BankName" xml:space="preserve">
    <value>Bankens namn</value>
  </data>
  
  <data name="FileExpenseClaim.CostType" xml:space="preserve">
    <value>Kostnadstyp</value>
    <comment>This is the 2nd bookkeeping dimension.</comment>
  </data>
  <data name="FileExpenseClaim.Description" xml:space="preserve">
    <value>Beskrivning</value>
  </data>
  <data name="FileExpenseClaim.HeaderBankDetails" xml:space="preserve">
    <value>Dina bankuppgifter</value>
  </data>
  <data name="FileExpenseClaim.HeaderReceiptImages" xml:space="preserve">
    <value>Kvittobilder</value>
  </data>
  <data name="FileExpenseClaim.Info" xml:space="preserve">
    <value>Om du har gjort ett inköp för organisationen med dina privata pengar, kommer du antagligen att vilja ha ersättning för det genom att lämna in ett &lt;em&gt;utläggsanspråk&lt;/em&gt;. Det gör du här genom att ladda upp bilder på kvitton och välja vilken budget som ska belastas. Om du tidigare har fått ett kontantförskott för detta inköp, så är det här du betalar tillbaka organisationens lån till dig (kontantförskottet) genom att redovisa kvitton för inköpet.</value>
  </data>
  <data name="FileExpenseClaim.PageTitle" xml:space="preserve">
    <value>Begär pengar för utlägg</value>
  </data>
  <data name="FileExpenseClaim.SuccessMessagePartOne" xml:space="preserve">
    <value>Ett utläggsanspråk på {0} {1:N2} har lämnats in mot budget {2}. Kvittona kommer nu att valideras av finansansvariga och anspråket att attesteras av budgetägaren.</value>
    <comment>{0} is the currency, {1} is the amount, and {2} is the budget name.</comment>
  </data>
  <data name="FileExpenseClaim.SuccessMessagePartTwo" xml:space="preserve">
    <value>Så snart som detta har skett, så kommer pengarna att gå till utbetalning till ditt angivna konto.</value>
  </data>
  <data name="FileExpenseClaim.SuccessMessagePartTwoOwnBudget" xml:space="preserve">
    <value>Eftersom detta är din egen budget, så är attestering redan gjord. Endast validering av kvitton är nödvändigt, och det görs av finansansvariga.</value>
  </data>
  <data name="FileExpenseClaim.UploadRecieptImages" xml:space="preserve">
    <value>Ladda upp kvittobilder</value>
  </data>
  <data name="FileExpenseClaim.ValidationError.Amount" xml:space="preserve">
    <value>Skriv in beloppet (i {0}) som du gör anspråk på.</value>
  </data>
  <data name="FileExpenseClaim.ValidationError.Documents" xml:space="preserve">
    <value>Ladda upp en eller flera kvittobilder som dokumenterar utlägget.</value>
  </data>
  <data name="FileExpenseClaim.ValidationError.MissingTag" xml:space="preserve">
    <value>Välj ett alternativ som anges.</value>
    <comment>Very general as tags may be many things.</comment>
  </data>
  <data name="FileExpenseClaim.ValidationError.Purpose" xml:space="preserve">
    <value>Beskriv vad detta inköp var.</value>
  </data>
  <data name="PayOutMoney.GridHeader.Amount" xml:space="preserve">
    <value>Belopp</value>
    <comment>Amount to be paid out</comment>
  </data>
  <data name="PayOutMoney.GridHeader.BankAccount" xml:space="preserve">
    <value>Clearing / Konto</value>
    <comment>Will display as "XXXX / YYYYYYYY" where XXXX is the clearing number</comment>
  </data>
  
  <data name="PayOutMoney.GridHeader.DueDate" xml:space="preserve">
    <value>Förfallodatum</value>
  </data>
  <data name="PayOutMoney.GridHeader.PaidOut" xml:space="preserve">
    <value>Betald</value>
    <comment>Possibly in imperative; a click in this column indicates payment has been done. It is an action column, not an information column.</comment>
  </data>
  <data name="PayOutMoney.GridHeader.Recipient" xml:space="preserve">
    <value>Mottagare</value>
    <comment>Can be org (for invoice) or person (for salary, expense, advance)</comment>
  </data>
  <data name="PayOutMoney.GridHeader.Reference" xml:space="preserve">
    <value>Referens</value>
    <comment>Depends on cost type - can be an OCR number for an invoice, a cash advance number, a salary spec, etc.</comment>
  </data>
  <data name="PayOutMoney.Header" xml:space="preserve">
    <value>Kostnader redo för utbetalning</value>
  </data>
  <data name="PayOutMoney.Info" xml:space="preserve">
    <value>Dessa är de kostnader organisationen har och som har godkänts i alla steg för utbetalning. Här bockar du av dem som utbetalda (förmodligen medan du har din bank öppen i ett fönster bredvid och betalar dem).</value>
  </data>
  <data name="PayOutMoney.PageTitle" xml:space="preserve">
    <value>Betala ut pengar</value>
  </data>
  <data name="PayOutMoney.PayoutCannotUndo" xml:space="preserve">
    <value>Kan inte ångra utbetalning #{0}: den är stängd eller har redan gått till betalning.</value>
  </data>
  <data name="PayOutMoney.PayoutCreated" xml:space="preserve">
    <value>Utbetalning #{0:N0} till {1} skapades.</value>
    <comment>Written as log message when the user confirms a payout has been made.</comment>
  </data>
  <data name="PayOutMoney.PayoutUndone" xml:space="preserve">
    <value>Utbetalning #{0:N0} ångrades och allt återställdes.</value>
  </data>
  <data name="RequestCashAdvance.Amount" xml:space="preserve">
    <value>Förskottsbelopp (i {0})</value>
    <comment>{0} is the currency.</comment>
  </data>
  <data name="RequestCashAdvance.BankAccount" xml:space="preserve">
    <value>Kontonummer</value>
  </data>
  <data name="RequestCashAdvance.BankClearing" xml:space="preserve">
    <value>Clearingnummer</value>
  </data>
  <data name="RequestCashAdvance.BankName" xml:space="preserve">
    <value>Bankens namn</value>
  </data>
  
  <data name="RequestCashAdvance.HeaderBankDetails" xml:space="preserve">
    <value>Dina bankuppgifter</value>
  </data>
  <data name="RequestCashAdvance.Info" xml:space="preserve">
    <value>Om du skall göra ett inköp för organisationen, men behöver pengar i förväg i stället för att hävda dem tillbaka i efteråt, kan du begära ett förskott för specifika ändamål.</value>
  </data>
  <data name="RequestCashAdvance.PageTitle" xml:space="preserve">
    <value>Begär förskott</value>
  </data>
  <data name="RequestCashAdvance.Purpose" xml:space="preserve">
    <value>Syfte</value>
  </data>
  <data name="RequestCashAdvance.SuccessMessagePartOne" xml:space="preserve">
    <value>Ett kontantförskott har begärts för &lt;strong&gt;{0}&lt;/strong&gt;. Det begärda beloppet är {2} {3:N2}. Observera att detta är ett &lt;strong&gt;lån&lt;/strong&gt; från organisationen tills kvitton har redovisats.</value>
    <comment>{0} is the person receiving the advance, {1} is the entered description. {2} is the currency (in caps) and {3:N2} is the amount, with two decimals, displayed in culture.</comment>
  </data>
  <data name="RequestCashAdvance.SuccessMessagePartTwo" xml:space="preserve">
    <value>Detta måste attesteras av budgetägaren, och går sedan till utbetalning.</value>
  </data>
  <data name="RequestCashAdvance.SuccessMessagePartTwoOwnBudget" xml:space="preserve">
    <value>Eftersom detta är din egen budget, så har detta attesterats automatiskt och har gått till utbetalning.</value>
    <comment>This is displayed if either the person creating the cash advance OR the person receiving it is the budget owner.</comment>
  </data>
  <data name="RequestCashAdvance.ValidationError.Amount" xml:space="preserve">
    <value>Skriv in beloppet (i {0}) som du skulle vilja ha i förskott.</value>
    <comment>{0} is the currency.</comment>
  </data>
  <data name="RequestCashAdvance.ValidationError.BankAccount" xml:space="preserve">
    <value>Ange ditt bankkontonummer.</value>
  </data>
  <data name="RequestCashAdvance.ValidationError.BankClearing" xml:space="preserve">
    <value>Vänligen ange din banks clearingnummer.</value>
  </data>
  <data name="RequestCashAdvance.ValidationError.BankName" xml:space="preserve">
    <value>Ange bankens namn.</value>
  </data>
  <data name="RequestCashAdvance.ValidationError.Budget" xml:space="preserve">
    <value>Välj en budget att belasta.</value>
  </data>
  <data name="RequestCashAdvance.ValidationError.Purpose" xml:space="preserve">
    <value>Vänligen ange syftet med förskottet.</value>
  </data>
  <data name="ValidateReceipts.Header.ReceiptsAwaitingValidation" xml:space="preserve">
    <value>Kvitton som väntar på godkännande</value>
  </data>
  <data name="ValidateReceipts.Info" xml:space="preserve">
    <value>Det är här du inspekterar och bekräftar giltigheten av kvitton som laddats upp för att dokumentera utläggsanspråk. Kontrollera att beloppet är korrekt och att kvittona verkar vara för vad utläggsanspråket påstår.</value>
  </data>
  <data name="ValidateReceipts.PageTitle" xml:space="preserve">
    <value>Godkänn kvitton</value>
  </data>
  <data name="ValidateReceipts.ReceiptsDevalidated" xml:space="preserve">
    <value>Kvittona för utläggsanspråk #{0:N0} på {1} {2:N2} har AV-godkänts. Utläggsanspråket kommer inte att gå till utbetalning om de inte granskas och godkänns på nytt.</value>
  </data>
  <data name="ValidateReceipts.ReceiptsValidated" xml:space="preserve">
    <value>Kvittona för utläggsanspråk #{0:N0} på {1} {2:N2} har godkänts.</value>
  </data>
</root>
